name: PR Quality Check

on:
  pull_request:
    branches:
      - develop
      - staging

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  pr-name-check:
    runs-on: ubuntu-latest    
    steps:
      - uses: morrisoncole/pr-lint-action@v1.5.0
        with:
          title-regex: '((API-[0-9]+\s)\[((fixed|added|released|updated|removed|wip|debug)*?)\]\s.+)|(\[((fixed|added|released|updated|removed|wip|debug)*?)\]\s(?!APT-[0-9]+).*.+)'
          on-failed-regex-fail-action: true
          on-failed-regex-request-changes: true
          on-failed-regex-create-review: true
          on-failed-regex-comment:
            "Your PR title has issues, please follow the template. API-1234 [fixed|added|released|updated|removed|wip|debug] Description. Or [fixed|added|released|updated|removed|wip|debug] Description."
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
        if: github.event_name == 'pull_request'

  Analysis:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Specify your .NET version
    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '5.x'

    - name: Restore dependencies
      run: dotnet restore DevOpsChallenge.SalesApi.sln

    - name: Build project
      run: dotnet build DevOpsChallenge.SalesApi.sln --no-restore --configuration Release

    - name: Run Unit Tests
      run: dotnet test ./tests/DevOpsChallenge.SalesApi.Business.UnitTests/DevOpsChallenge.SalesApi.Business.UnitTests.csproj --no-build --configuration Release --collect:"XPlat Code Coverage"

    - name: Upload unit tests results
      uses: actions/upload-artifact@v4
      with:
        name: unit-tests-results
        path: './tests/DevOpsChallenge.SalesApi.Business.UnitTests/TestResults'

#      - name: Upload Coverage Report
#        uses: codecov/codecov-action@v3
#        with:
#          files: '**/coverage.cobertura.xml'

#    - name: Run code analysis with SonarCloud
#      uses: SonarSource/sonarcloud-github-action@v2
#      env:
#        GITHUB_TOKEN: ${{ secrets.API_DEPLOYMENT_ACCESS_TOKEN }}  
#        SONAR_TOKEN: ${{ secrets.SONAR_CLOUD_TOKEN }}